{"version":3,"sources":["file:///D:/Cocos%20Creator/Sky-Hunter/NewProject/assets/scripts/Boss.ts"],"names":["_decorator","Component","Collider2D","Contact2DType","math","Vec3","tween","Prefab","instantiate","ccclass","property","Boss","randomPosition","start","collider","getComponent","on","BEGIN_CONTACT","onBeginContact","END_CONTACT","onEndContact","moveRandom","spawnTurn1","update","deltaTime","randomX","random","randomY","distance","node","position","duration","speed","to","call","selfCollider","otherCollider","contact","other","self","i","listBullet","length","enemyPre","prefabInstance","parent","setWorldPosition","worldPosition"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,U,OAAAA,U;AAAYC,MAAAA,a,OAAAA,a;AAAeC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,K,OAAAA,K;AAA0BC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;;;;;;;;;OACzG;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBV,U;;sBAGjBW,I,WADZF,OAAO,CAAC,MAAD,C,UAEHC,QAAQ,CAACH,MAAD,C,2BAFb,MACaI,IADb,SAC0BV,SAD1B,CACoC;AAAA;AAAA;;AAAA;;AAAA;;AAAA,eAKzBW,cALyB;AAAA;;AAMhCC,QAAAA,KAAK,GAAG;AACJ,cAAIC,QAAQ,GAAG,KAAKC,YAAL,CAAkBb,UAAlB,CAAf;;AACA,cAAIY,QAAJ,EAAc;AACVA,YAAAA,QAAQ,CAACE,EAAT,CAAYb,aAAa,CAACc,aAA1B,EAAyC,KAAKC,cAA9C,EAA8D,IAA9D;AACAJ,YAAAA,QAAQ,CAACE,EAAT,CAAYb,aAAa,CAACgB,WAA1B,EAAuC,KAAKC,YAA5C,EAA0D,IAA1D;AACH;;AAED,eAAKC,UAAL;AACA,eAAKC,UAAL;AACH;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AACDH,QAAAA,UAAU,GAAG;AACT,gBAAMI,OAAO,GAAGrB,IAAI,CAACsB,MAAL,MAAiB,IAAI,IAArB,IAA6B,GAA7C;AACA,gBAAMC,OAAO,GAAGvB,IAAI,CAACsB,MAAL,MAAiB,MAAM,GAAvB,IAA8B,GAA9C;AACA,eAAKd,cAAL,GAAsB,IAAIP,IAAJ,CAASoB,OAAT,EAAkBE,OAAlB,CAAtB;AAEA,gBAAMC,QAAQ,GAAGvB,IAAI,CAACuB,QAAL,CAAc,KAAKC,IAAL,CAAUC,QAAxB,EAAkC,KAAKlB,cAAvC,CAAjB;AACA,gBAAMmB,QAAQ,GAAGH,QAAQ,GAAG,KAAKI,KAAjC;AAEA1B,UAAAA,KAAK,CAAC,KAAKuB,IAAN,CAAL,CACKI,EADL,CACQF,QADR,EACkB;AAAED,YAAAA,QAAQ,EAAE,KAAKlB;AAAjB,WADlB,EAEKsB,IAFL,CAEU,MAAM;AACR,iBAAKb,UAAL;AACH,WAJL,EAKKR,KALL;AAMH;;AACDK,QAAAA,cAAc,CAACiB,YAAD,EAA2BC,aAA3B,EAAsDC,OAAtD,EAAwF;AAClG,cAAIC,KAAK,GAAGF,aAAa,CAACP,IAA1B;AACA,cAAIU,IAAI,GAAGJ,YAAY,CAACN,IAAxB;AACH;;AACDT,QAAAA,YAAY,CAACe,YAAD,EAA2BC,aAA3B,EAAsDC,OAAtD,EAAwF,CAEnG;;AACDf,QAAAA,UAAU,GAAE;AACR,eAAI,IAAIkB,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,KAAKC,UAAL,CAAgBC,MAAnC,EAA2CF,CAAC,EAA5C,EAA+C;AAC3C,gBAAIG,QAAQ,GAAG,KAAKF,UAAL,CAAgBD,CAAhB,CAAf;AACA,gBAAII,cAAc,GAAGpC,WAAW,CAACmC,QAAD,CAAhC;AACAC,YAAAA,cAAc,CAACC,MAAf,GAAwB,KAAKhB,IAAL,CAAUgB,MAAlC;AACAD,YAAAA,cAAc,CAACE,gBAAf,CAAgC,KAAKjB,IAAL,CAAUkB,aAA1C;AACH;AACJ;;AAjD+B,O;;;;;iBAED,E;;gFAC9BrC,Q;;;;;iBACe,G","sourcesContent":["import { _decorator, Component, Node, Collider2D, Contact2DType, math, Vec3, tween, IPhysics2DContact, Prefab, instantiate } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Boss')\r\nexport class Boss extends Component {\r\n    @property(Prefab)\r\n    public listBullet: Prefab [] = [];\r\n    @property\r\n    speed: number = 100;\r\n    public randomPosition;\r\n    start() {\r\n        let collider = this.getComponent(Collider2D);\r\n        if (collider) {\r\n            collider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n            collider.on(Contact2DType.END_CONTACT, this.onEndContact, this);\r\n        }\r\n\r\n        this.moveRandom();\r\n        this.spawnTurn1();\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        \r\n    }\r\n    moveRandom() {\r\n        const randomX = math.random() * (0 - 1000) + 500;\r\n        const randomY = math.random() * (200 - 600) + 200;\r\n        this.randomPosition = new Vec3(randomX, randomY);\r\n\r\n        const distance = Vec3.distance(this.node.position, this.randomPosition);\r\n        const duration = distance / this.speed;\r\n\r\n        tween(this.node)\r\n            .to(duration, { position: this.randomPosition })\r\n            .call(() => {\r\n                this.moveRandom();\r\n            })\r\n            .start();\r\n    }\r\n    onBeginContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null){\r\n        let other = otherCollider.node;\r\n        let self = selfCollider.node;\r\n    }\r\n    onEndContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null){\r\n\r\n    }\r\n    spawnTurn1(){\r\n        for(let i = 0; i < this.listBullet.length; i++){\r\n            let enemyPre = this.listBullet[i];\r\n            let prefabInstance = instantiate(enemyPre);\r\n            prefabInstance.parent = this.node.parent;\r\n            prefabInstance.setWorldPosition(this.node.worldPosition);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]}