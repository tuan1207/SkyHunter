{"version":3,"sources":["file:///D:/Cocos%20Creator/Sky-Hunter/NewProject/assets/scripts/Audio.ts"],"names":["_decorator","Component","Node","AudioClip","AudioSource","Toggle","ccclass","property","Audio","onOffAudio","onOffMusic","clip","onLoad","instance","onAudioQueue","index","clips","audioSource1","playOneShot","onToggle","btn","isChecked","turnOffMusicBtn","active","turnOnMusicBtn","audioSource","volume"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,M,OAAAA,M;;;;;;;;;OACxD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;uBAGjBQ,K,WADZF,OAAO,CAAC,OAAD,C,UAGHC,QAAQ,CAACJ,SAAD,C,UAERI,QAAQ,CAACH,WAAD,C,UAERG,QAAQ,CAACH,WAAD,C,UAERG,QAAQ,CAACL,IAAD,C,UAERK,QAAQ,CAACL,IAAD,C,UAERK,QAAQ,CAACL,IAAD,C,UAERK,QAAQ,CAACL,IAAD,C,UAERK,QAAQ,CAACF,MAAD,C,sCAjBb,MACaG,KADb,SAC2BP,SAD3B,CACqC;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAmB1BQ,UAnB0B,GAmBJ,IAnBI;AAAA,eAoB1BC,UApB0B,GAoBJ,IApBI;AAAA,eAqB1BC,IArB0B;AAAA;;AAsBvBC,QAAAA,MAAM,GAAS;AACrBJ,UAAAA,KAAK,CAACK,QAAN,GAAiB,IAAjB;AACH;;AAEDC,QAAAA,YAAY,CAACC,KAAD,EAAe;AACvB,cAAIJ,IAAe,GAAG,KAAKK,KAAL,CAAWD,KAAX,CAAtB;AACA,eAAKE,YAAL,CAAkBC,WAAlB,CAA8BP,IAA9B;AACH;;AAEDQ,QAAAA,QAAQ,GAAG;AACP;AACA,cAAI,KAAKC,GAAL,CAASC,SAAb,EAAwB;AACpB;AACA,iBAAKC,eAAL,CAAqBC,MAArB,GAA8B,IAA9B;AACA,iBAAKC,cAAL,CAAoBD,MAApB,GAA6B,KAA7B;AACA,iBAAKE,WAAL,CAAiBC,MAAjB,GAA0B,CAA1B;AACH,WALD,MAKO;AACH;AACA,iBAAKJ,eAAL,CAAqBC,MAArB,GAA8B,KAA9B;AACA,iBAAKC,cAAL,CAAoBD,MAApB,GAA6B,IAA7B;AACA,iBAAKE,WAAL,CAAiBC,MAAjB,GAA0B,GAA1B;AACH;AACJ;;AA5CgC,O,UAC1Bb,Q;;;;;iBAEsB,E;;;;;;;iBAEK,I;;;;;;;iBAEC,I;;;;;;;iBAEJ,I;;;;;;;iBAED,I;;;;;;;iBAEC,I;;;;;;;iBAED,I;;;;;;;iBAET,I","sourcesContent":["import { _decorator, Component, Node, AudioClip, AudioSource, Toggle } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Audio')\r\nexport class Audio extends Component {\r\n    static instance: Audio;\r\n    @property(AudioClip)\r\n    public clips: AudioClip [] = [];\r\n    @property(AudioSource)\r\n    public audioSource: AudioSource = null;\r\n    @property(AudioSource)\r\n    public audioSource1: AudioSource = null;\r\n    @property(Node)\r\n    public turnOffAudioBtn: Node = null;\r\n    @property(Node)\r\n    public turnOnAudioBtn: Node = null;\r\n    @property(Node)\r\n    public turnOffMusicBtn: Node = null;\r\n    @property(Node)\r\n    public turnOnMusicBtn: Node = null;\r\n    @property(Toggle)\r\n    public btn: Toggle = null;\r\n\r\n    public onOffAudio: boolean = true;\r\n    public onOffMusic: boolean = true;\r\n    public clip;\r\n    protected onLoad(): void {\r\n        Audio.instance = this;\r\n    }\r\n\r\n    onAudioQueue(index: number){\r\n        let clip: AudioClip = this.clips[index];\r\n        this.audioSource1.playOneShot(clip);\r\n    }\r\n\r\n    onToggle() {\r\n        // Check if the toggle is checked or unchecked\r\n        if (this.btn.isChecked) {\r\n            // If checked, play the background music\r\n            this.turnOffMusicBtn.active = true;\r\n            this.turnOnMusicBtn.active = false;\r\n            this.audioSource.volume = 0;\r\n        } else {\r\n            // If unchecked, stop the background music\r\n            this.turnOffMusicBtn.active = false;\r\n            this.turnOnMusicBtn.active = true;\r\n            this.audioSource.volume = 0.3;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]}