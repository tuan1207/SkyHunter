{"version":3,"sources":["file:///D:/Cocos%20Creator/Sky-Hunter/NewProject/assets/scripts/Helicopter.ts"],"names":["_decorator","Component","Vec3","Collider2D","Contact2DType","Prefab","instantiate","GameCtrl","ButtonPlayScene","ccclass","property","Helicopter","bulletSpeed","posX","posY","spawnItemPos","contacted","itemSpawned","start","collider","getComponent","on","BEGIN_CONTACT","onBeginContact","END_CONTACT","onEndContact","update","deltaTime","instance","spawnEnabled","node","position","x","y","destroy","posBullet","setPosition","selfCollider","otherCollider","contact","scheduleOnce","spawnItem","randomIndex","Math","floor","random","items","length","randomPrefab","prefabInstance","addChild"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Vec3, Collider2D, Contact2DType, IPhysics2DContact, Prefab, instantiate } from 'cc';\r\nimport { GameCtrl } from './GameCtrl';\r\nimport { ButtonPlayScene } from './ButtonPlayScene';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Helicopter')\r\nexport class Helicopter extends Component {\r\n    public bulletSpeed: number = 10;\r\n    private posX: number;\r\n    private posY: number;\r\n    public spawnItemPos;\r\n    private contacted: boolean = false;\r\n    private itemSpawned: boolean = false; // Biến để kiểm tra xem item đã được spawn chưa\r\n    @property(Prefab)\r\n    public items: Prefab [] = []\r\n\r\n    start() {\r\n        let collider = this.getComponent(Collider2D);\r\n        if(collider){\r\n            collider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n            collider.on(Contact2DType.END_CONTACT, this.onEndContact, this);\r\n        }\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        if(!ButtonPlayScene.instance.spawnEnabled) return;\r\n\r\n        this.posX = this.node.position.x;\r\n        this.posY = this.node.position.y;\r\n\r\n        this.posX += this.bulletSpeed * 0.5;\r\n        if(this.posX > 690){\r\n            this.node.destroy();\r\n        }\r\n        let posBullet = new Vec3(this.posX, this.posY);\r\n        this.node.setPosition(posBullet);\r\n    }\r\n\r\n    onBeginContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null){\r\n        this.spawnItemPos = selfCollider.node.position;\r\n        selfCollider.node.destroy();\r\n        otherCollider.node.destroy();\r\n        // Kiểm tra nếu chưa spawn item thì mới thực hiện spawn\r\n        if(!this.itemSpawned){\r\n            this.scheduleOnce(()=>{this.spawnItem()});\r\n            this.itemSpawned = true; // Đặt biến này thành true để chỉ spawn 1 item\r\n        }\r\n    }\r\n\r\n    onEndContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null){\r\n        // Đặt lại biến itemSpawned về false khi kết thúc va chạm\r\n        this.itemSpawned = false;\r\n    }\r\n\r\n    spawnItem(){\r\n        if(!ButtonPlayScene.instance.spawnEnabled) return;\r\n\r\n        let randomIndex = Math.floor(Math.random() * this.items.length);\r\n        let randomPrefab = this.items[randomIndex];\r\n\r\n        let prefabInstance = instantiate(randomPrefab);\r\n        prefabInstance.setPosition(this.spawnItemPos);\r\n        GameCtrl.instance.node.addChild(prefabInstance);\r\n    }\r\n}\r\n\r\n\r\n"]}