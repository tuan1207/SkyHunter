{"version":3,"sources":["file:///D:/Cocos%20Creator/Sky-Hunter/NewProject/assets/scripts/Helicopter.ts"],"names":["_decorator","Component","Vec3","Collider2D","Contact2DType","ccclass","property","Helicopter","bulletSpeed","posX","posY","start","collider","getComponent","on","BEGIN_CONTACT","onBeginContact","END_CONTACT","onEndContact","update","deltaTime","node","position","x","y","destroy","posBullet","setPosition","selfCollider","otherCollider","contact","other","self","spawnItem"],"mappings":";;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,U,OAAAA,U;AAAYC,MAAAA,a,OAAAA,a;;;;;;;;;OAClD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;4BAGjBO,U,WADZF,OAAO,CAAC,YAAD,C,gBAAR,MACaE,UADb,SACgCN,SADhC,CAC0C;AAAA;AAAA;AAAA,eAC/BO,WAD+B,GACT,EADS;AAAA,eAE9BC,IAF8B;AAAA,eAG9BC,IAH8B;AAAA;;AAItCC,QAAAA,KAAK,GAAG;AACJ,cAAIC,QAAQ,GAAG,KAAKC,YAAL,CAAkBV,UAAlB,CAAf;;AACA,cAAGS,QAAH,EAAY;AACRA,YAAAA,QAAQ,CAACE,EAAT,CAAYV,aAAa,CAACW,aAA1B,EAAyC,KAAKC,cAA9C,EAA8D,IAA9D;AACAJ,YAAAA,QAAQ,CAACE,EAAT,CAAYV,aAAa,CAACa,WAA1B,EAAuC,KAAKC,YAA5C,EAA0D,IAA1D;AACH;AACJ;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB;AACtB,eAAKX,IAAL,GAAY,KAAKY,IAAL,CAAUC,QAAV,CAAmBC,CAA/B;AACA,eAAKb,IAAL,GAAY,KAAKW,IAAL,CAAUC,QAAV,CAAmBE,CAA/B;AAEA,eAAKf,IAAL,IAAa,KAAKD,WAAL,GAAmB,GAAhC;;AACA,cAAG,KAAKC,IAAL,GAAY,GAAf,EAAmB;AACf,iBAAKY,IAAL,CAAUI,OAAV;AACH;;AACD,cAAIC,SAAS,GAAG,IAAIxB,IAAJ,CAAS,KAAKO,IAAd,EAAoB,KAAKC,IAAzB,CAAhB;AACA,eAAKW,IAAL,CAAUM,WAAV,CAAsBD,SAAtB;AACH;;AACDV,QAAAA,cAAc,CAACY,YAAD,EAA2BC,aAA3B,EAAsDC,OAAtD,EAAwF;AAClG,cAAIC,KAAK,GAAGF,aAAa,CAACR,IAA1B;AACA,cAAIW,IAAI,GAAGJ,YAAY,CAACP,IAAxB;AACH;;AACDH,QAAAA,YAAY,CAACU,YAAD,EAA2BC,aAA3B,EAAsDC,OAAtD,EAAwF,CAEnG;;AAEDG,QAAAA,SAAS,GAAE,CAEV;;AAjCqC,O","sourcesContent":["import { _decorator, Component, Node, Vec3, Collider2D, Contact2DType, IPhysics2DContact } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Helicopter')\r\nexport class Helicopter extends Component {\r\n    public bulletSpeed: number = 10;\r\n    private posX: number;\r\n    private posY: number;\r\n    start() {\r\n        let collider = this.getComponent(Collider2D);\r\n        if(collider){\r\n            collider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n            collider.on(Contact2DType.END_CONTACT, this.onEndContact, this);\r\n        }\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        this.posX = this.node.position.x;\r\n        this.posY = this.node.position.y;\r\n\r\n        this.posX += this.bulletSpeed * 0.5;\r\n        if(this.posX > 690){\r\n            this.node.destroy();\r\n        }\r\n        let posBullet = new Vec3(this.posX, this.posY);\r\n        this.node.setPosition(posBullet);\r\n    }\r\n    onBeginContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null){\r\n        let other = otherCollider.node;\r\n        let self = selfCollider.node;\r\n    }\r\n    onEndContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null){\r\n\r\n    }\r\n\r\n    spawnItem(){\r\n        \r\n    }\r\n}\r\n\r\n\r\n"]}