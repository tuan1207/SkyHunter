{"version":3,"sources":["file:///D:/Cocos%20Creator/Sky-Hunter/NewProject/assets/scripts/Boss.ts"],"names":["_decorator","Component","Collider2D","Contact2DType","math","Vec3","Prefab","instantiate","macro","Animation","RigidBody2D","Vec2","AudioToggle","ButtonPlayScene","ccclass","property","Boss","bulletCont1","bulletCont2","bulletCont3","maxHealth1","currentHealth1","maxHealth2","currentHealth2","maxHealth3","currentHealth3","randomX","randomY","randomPosition","ZERO","bulletVelos","start","collider","getComponent","on","BEGIN_CONTACT","onBeginContact","END_CONTACT","onEndContact","randomPos","onLoad","instance","schedule","spawnBullet","REPEAT_FOREVER","update","dt","moveEnable","direction","clone","subtract","node","position","normalize","distance","posX","x","posY","y","setPosition","random","selfCollider","otherCollider","contact","onAudioQueue","name","scheduleOnce","destroy","spawnEnabled","i","length","enemyPre","bulletE","j","prefabInstance","parent","linearVelocity","setWorldPosition","worldPosition","z"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Collider2D, Contact2DType, math, Vec3, tween, IPhysics2DContact, Prefab, instantiate, macro, Animation, Scene, RigidBody2D, Vec2 } from 'cc';\r\nimport { GameCtrl } from './GameCtrl';\r\nimport { Plane } from './Plane';\r\nimport { AudioToggle } from './AudioToggle';\r\nimport { ButtonPlayScene } from './ButtonPlayScene';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Boss')\r\nexport class Boss extends Component {\r\n    static instance: Boss;\r\n    @property(Prefab)\r\n    public bulletE: Prefab = null;\r\n    @property(Animation)\r\n    public laserBullet: Animation = null;\r\n    @property\r\n    speed: number = 100;\r\n    public bulletCont1 = [];\r\n    public bulletCont2 = [];\r\n    public bulletCont3 = [];\r\n    public maxHealth1: number = 50;\r\n    public currentHealth1: number = 50;\r\n    public maxHealth2: number = 100;\r\n    public currentHealth2: number = 100;\r\n    public maxHealth3: number = 150;\r\n    public currentHealth3: number = 150;  \r\n    public randomX: number;\r\n    public randomY: number;\r\n    public randomPosition: Vec3 = Vec3.ZERO;\r\n    bulletVelos = [\r\n        new Vec2(0, 13.85), new Vec2(5.3, 12.8), new Vec2(10.6, 10.6), new Vec2(12.8, 5.3),\r\n        new Vec2(13.85, 0), new Vec2(12.8, -5.3), new Vec2(10.6, -10.6), new Vec2(5.3, -12.8),\r\n        new Vec2(0, -13.85), new Vec2(-5.3, -12.8), new Vec2(-10.6, -10.6), new Vec2(-12.8, -5.3),\r\n        new Vec2(-13.85, 0), new Vec2(-12.8, 5.3), new Vec2(-10.6, 10.6), new Vec2(-5.3, 12.8),\r\n    ];\r\n    start() {\r\n        let collider = this.getComponent(Collider2D);\r\n        if (collider) {\r\n            collider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n            collider.on(Contact2DType.END_CONTACT, this.onEndContact, this);\r\n        }\r\n        this.randomPos();\r\n    }\r\n    protected onLoad(): void {\r\n        Boss.instance = this;\r\n        this.schedule(this.spawnBullet, 2.5, macro.REPEAT_FOREVER, 0);\r\n    }\r\n    update(dt: number) {\r\n        if (!ButtonPlayScene.instance.moveEnable) {\r\n            return;\r\n        }\r\n        let direction = this.randomPosition.clone().subtract(this.node.position).normalize();\r\n        let distance = math.Vec3.distance(this.node.position, this.randomPosition);\r\n        let posX = this.node.position.x + direction.x * distance * 0.01;\r\n        let posY = this.node.position.y + direction.y * distance * 0.01;\r\n        this.node.setPosition(new Vec3(posX, posY));\r\n        if (distance <= 50) {\r\n            this.randomPos();  \r\n        }\r\n    }\r\n    randomPos(){\r\n        this.randomX = math.random() * (0 - 1000) + 500;\r\n        this.randomY = math.random() * (200 - 600) + 400;\r\n        this.randomPosition = new Vec3(this.randomX, this.randomY);        \r\n    }\r\n    onBeginContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null){\r\n        AudioToggle.instance.onAudioQueue(7);\r\n        if(otherCollider.node.name === 'bullet0' || otherCollider.node.name === 'rocket'){\r\n            this.scheduleOnce(() => {otherCollider.node?.destroy()});\r\n                \r\n        }\r\n    }\r\n    onEndContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null){\r\n\r\n    }\r\n    spawnBullet(){\r\n        if(!ButtonPlayScene.instance.spawnEnabled) {\r\n            return;\r\n        }\r\n        if(this.node.name === 'boss002'){\r\n            return;\r\n        }\r\n        if(this.node.name === 'boss003'){\r\n            for( let i = 0; i < this.bulletVelos.length; i++){\r\n                let enemyPre = this.bulletE;\r\n                for(let j = 0; j < 3; j++){\r\n                    let prefabInstance = instantiate(enemyPre);\r\n                    prefabInstance.parent = this.node.parent;\r\n                    prefabInstance.getComponent(RigidBody2D).linearVelocity = this.bulletVelos[i];\r\n                    if(j === 0){\r\n                        prefabInstance.setWorldPosition(this.node.worldPosition.x - 105, this.node.worldPosition.y - 65, this.node.worldPosition.z);\r\n                    }\r\n                    if(j === 1){\r\n                        prefabInstance.setWorldPosition(this.node.worldPosition.x + 105, this.node.worldPosition.y - 65, this.node.worldPosition.z);\r\n                    }\r\n                    if(j === 2){\r\n                        prefabInstance.setWorldPosition(this.node.worldPosition.x, this.node.worldPosition.y, this.node.worldPosition.z);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"]}