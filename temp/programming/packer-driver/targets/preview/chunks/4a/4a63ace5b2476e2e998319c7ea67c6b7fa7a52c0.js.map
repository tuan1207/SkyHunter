{"version":3,"sources":["file:///D:/Cocos%20Creator/Sky-Hunter/NewProject/assets/scripts/JoyStick.ts"],"names":["_decorator","Component","math","Node","UITransform","Vec3","ccclass","property","JoyStick","stickPos","VecY","isStickMoving","start","canvas","on","EventType","TOUCH_START","onTouchStart","TOUCH_MOVE","onStickMove","TOUCH_END","onStickEnd","TOUCH_CANCEL","update","dt","direction","clone","subtract","normalize","distance","posX","plane","position","x","posY","y","setPosition","onLoad","instance","event","wp","touch","getUILocation","posMouse","node","parent","getComponent","convertToNodeSpaceAR","joyStick","active","stickMag","length","maxR","Stick"],"mappings":"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","sourcesContent":["import { _decorator, Component, EventTouch, math, misc, Node, UITransform, Vec3 } from 'cc';\r\nimport { Plane } from './Plane';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('JoyStick')\r\nexport class JoyStick extends Component {\r\n    static instance: JoyStick;\r\n\r\n    @property(Node)\r\n    public joyStick: Node = null;\r\n    @property(Node)\r\n    public Stick: Node = null;\r\n    @property\r\n    public maxR: number = 100;\r\n    @property(Node)\r\n    public plane: Node = null;\r\n    @property(Node)\r\n    public canvas: Node = null;\r\n\r\n    public stickPos;\r\n    public VecY = new Vec3(0, 0, 0);\r\n\r\n    private isStickMoving: boolean = false;\r\n    protected start(): void {\r\n        this.canvas.on(Node.EventType.TOUCH_START, this.onTouchStart, this);\r\n        this.canvas.on(Node.EventType.TOUCH_MOVE, this.onStickMove, this);\r\n        this.canvas.on(Node.EventType.TOUCH_END, this.onStickEnd, this);\r\n        this.canvas.on(Node.EventType.TOUCH_CANCEL, this.onStickEnd, this);\r\n    }\r\n\r\n    update(dt: number) {\r\n        // If the stick is moving, update the plane's position\r\n        if (this.isStickMoving) {\r\n            let direction = this.stickPos.clone().subtract(this.VecY).normalize();\r\n            let distance = math.Vec3.distance(this.VecY, this.stickPos);\r\n            let posX = this.plane.position.x + direction.x * distance * 0.05;\r\n            let posY = this.plane.position.y + direction.y * distance * 0.05;\r\n            if (posX >= -630 && posX <= 630 && posY >= -330 && posY <= 330){\r\n                this.plane.setPosition(new Vec3(posX, posY));\r\n            }\r\n        }\r\n    }\r\n\r\n    protected onLoad(): void {\r\n        JoyStick.instance = this;\r\n\r\n        \r\n\r\n    }\r\n    onTouchStart(event: EventTouch){\r\n\r\n        let wp = event.touch.getUILocation();\r\n        let posMouse = this.node.parent.getComponent(UITransform).convertToNodeSpaceAR(new Vec3(wp.x, wp.y));\r\n        this.joyStick.active = true;\r\n        this.joyStick.setPosition(posMouse);\r\n        \r\n    }\r\n\r\n    onStickMove(event: EventTouch, dt: number) {\r\n        let wp = event.getUILocation();\r\n        this.stickPos = this.node.getComponent(UITransform).convertToNodeSpaceAR(new Vec3(wp.x, wp.y));\r\n        let stickMag = this.stickPos.length();\r\n        if (stickMag <= 0) {\r\n            return;\r\n        }\r\n        if (stickMag > this.maxR) {\r\n            this.stickPos.x = this.stickPos.x * this.maxR / stickMag;\r\n            this.stickPos.y = this.stickPos.y * this.maxR / stickMag;\r\n        }\r\n        this.Stick.setPosition(this.stickPos);\r\n        \r\n        // Set the flag to indicate that the stick is being moved\r\n        this.isStickMoving = true;\r\n    }\r\n\r\n    onStickEnd(event: EventTouch) {\r\n        // Reset the stick position\r\n        this.Stick.setPosition(new Vec3(0, 0));\r\n        \r\n        // Reset the flag to indicate that the stick has stopped moving\r\n        this.isStickMoving = false;\r\n    }\r\n}\r\n\r\n\r\n"]}