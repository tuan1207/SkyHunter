{"version":3,"sources":["file:///D:/Cocos%20Creator/Sky-Hunter/NewProject/assets/scripts/JoyStick.ts"],"names":["_decorator","Component","math","Node","UITransform","Vec3","ccclass","property","JoyStick","Pos","VecY","moveSpeed","lastDirection","isStickMoving","start","onLoad","instance","node","on","EventType","TOUCH_MOVE","onStickMove","TOUCH_END","onStickEnd","TOUCH_CANCEL","event","dt","wp","getUILocation","getComponent","convertToNodeSpaceAR","x","y","stickMag","length","maxR","Stick","setPosition","direction","clone","subtract","normalize","distance","Math","abs","speed","posX","plane","position","posY","update"],"mappings":"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","sourcesContent":["import { _decorator, Component, EventTouch, math, misc, Node, UITransform, Vec3 } from 'cc';\r\nimport { Plane } from './Plane';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('JoyStick')\r\nexport class JoyStick extends Component {\r\n    static instance: JoyStick;\r\n    @property(Node)\r\n    public joyStick: Node = null;\r\n    @property(Node)\r\n    public Stick: Node = null;\r\n    @property\r\n    public maxR: number = 100;\r\n    public Pos;\r\n    public VecY = new Vec3(0, 0, 0);\r\n    @property(Node)\r\n    public plane: Node = null;\r\n    public moveSpeed: number = 200;\r\n    public lastDirection = new Vec3(0, 0, 0);\r\n    public isStickMoving: boolean = true;\r\n    \r\n    start() {\r\n\r\n    }\r\n    protected onLoad(): void {\r\n        JoyStick.instance = this;\r\n        \r\n        this.node.on(Node.EventType.TOUCH_MOVE, this.onStickMove, this);\r\n        this.node.on(Node.EventType.TOUCH_END, this.onStickEnd, this);\r\n        this.node.on(Node.EventType.TOUCH_CANCEL, this.onStickEnd, this);\r\n\r\n    }\r\n    onStickMove(event: EventTouch, dt: number){\r\n        if(this.isStickMoving){\r\n            let wp = event.getUILocation();\r\n        this.Pos = this.node.getComponent(UITransform).convertToNodeSpaceAR(new Vec3(wp.x, wp.y));\r\n        let stickMag = this.Pos.length();\r\n        if(stickMag <= 0){\r\n        return;\r\n        }\r\n        if(stickMag > this.maxR){\r\n            this.Pos.x = this.Pos.x * this.maxR/stickMag;\r\n            this.Pos.y = this.Pos.y * this.maxR/stickMag;\r\n        }\r\n        this.Stick.setPosition(this.Pos);\r\n        let direction = this.Pos.clone().subtract(this.VecY).normalize();\r\n        let distance = Math.abs(math.Vec3.distance(this.VecY, this.Pos));\r\n        let speed = 0.05;\r\n        let posX = this.plane.position.x + direction.x * distance * speed;\r\n        let posY = this.plane.position.y + direction.y * distance * speed;\r\n        if (posX >= -630 && posX <= 630 && posY >= -330 && posY <= 330){\r\n            this.plane.setPosition(new Vec3(posX, posY));\r\n        }\r\n        }\r\n        \r\n    }\r\n    onStickEnd(event: EventTouch){\r\n        this.Stick.setPosition(new Vec3(0, 0));\r\n    }\r\n    update(dt: number) {\r\n        if (!this.isStickMoving) {\r\n            let distance = Math.abs(math.Vec3.distance(this.VecY, this.Pos));\r\n            let speed = 0.05;\r\n            let posX = this.plane.position.x + this.lastDirection.x * distance * speed;\r\n            let posY = this.plane.position.y + this.lastDirection.y * distance * speed;\r\n            if (posX >= -630 && posX <= 630 && posY >= -330 && posY <= 330){\r\n                this.plane.setPosition(new Vec3(posX, posY));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]}