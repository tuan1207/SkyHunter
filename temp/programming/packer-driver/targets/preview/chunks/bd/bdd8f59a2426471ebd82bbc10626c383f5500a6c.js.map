{"version":3,"sources":["file:///D:/Cocos%20Creator/Sky-Hunter/NewProject/assets/scripts/GameCtrl.ts"],"names":["_decorator","Component","Node","Prefab","Vec3","instantiate","macro","Label","ProgressBar","sys","ccclass","property","GameCtrl","destroyCount","highPoint","spawnEnable","checkTurn1","listPos","onLoad","instance","spawnTurn1","schedule","spawnHeli","REPEAT_FOREVER","i","enemyWave1","length","enemyPre","prefabInstance","parent","node","helicopPre","helicop","spawnPos","setPosition","addChild","countPoint","point","countPointLb","string","overPointLb","savePoint","storedHighPoint","parseInt","localStorage","getItem","isNaN","setItem","toString","highPointLb"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Prefab, Vec3, instantiate, macro, Label, ProgressBar, System, sys } from 'cc';\r\nimport { Plane } from './Plane';\r\nimport { ButtonPlayScene } from './ButtonPlayScene';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('GameCtrl')\r\nexport class GameCtrl extends Component {\r\n    static instance: GameCtrl;\r\n\r\n    @property(Prefab)\r\n    public enemyWave1: Prefab [] = [];\r\n    @property(Prefab)\r\n    public helicop: Prefab = null;\r\n\r\n    @property(Node)\r\n    public overNode: Node = null;\r\n\r\n    @property(Label)\r\n    public countPointLb: Label;\r\n    @property(Label)\r\n    public overPointLb: Label;\r\n    @property(Label)\r\n    public highPointLb: Label;\r\n\r\n    @property(ProgressBar)\r\n    public healthBar: ProgressBar = null;\r\n\r\n    public destroyCount: number = 0;\r\n    public highPoint: number = 0;\r\n    \r\n    public spawnEnable: boolean = true;\r\n    public checkTurn1: boolean = true;\r\n    listPos = [\r\n        new Vec3(640, 760, -1), //turn 1, 3, 5, 7\r\n        new Vec3(-50, 760, -1), //turn 2\r\n        new Vec3(-100, 560, -1),//turn 4\r\n        new Vec3(-50, 270, -1), //turn 6\r\n        new Vec3(1330, 560, -1),//turn 8\r\n        new Vec3(1330, 270, -1),//turn 9\r\n        new Vec3(1330, 760, -1),//turn 10\r\n        new Vec3(640, 500, -1)  //turn boss\r\n    ];\r\n    protected onLoad(): void {\r\n        GameCtrl.instance = this;\r\n        this.spawnTurn1();\r\n        this.schedule(this.spawnHeli, 21, macro.REPEAT_FOREVER, 0);\r\n    }\r\n    \r\n    spawnTurn1(){\r\n        if(!this.checkTurn1 || !this.spawnEnable) return;\r\n        let i: number = 0;\r\n        if( i < this.enemyWave1.length){\r\n            this.schedule(i++, 6, macro.REPEAT_FOREVER, 0);\r\n\r\n            for(let i = 0; i < 5; i++){\r\n                let enemyPre = this.enemyWave1[i];\r\n                let prefabInstance = instantiate(enemyPre);\r\n                prefabInstance.parent = this.node;\r\n                \r\n            }\r\n        }\r\n    }\r\n\r\n    spawnHeli(){\r\n        let helicopPre = this.helicop;\r\n        let prefabInstance = instantiate(helicopPre);\r\n        let spawnPos = new Vec3(-690, 225);\r\n        prefabInstance.setPosition(spawnPos);\r\n        this.node.addChild(prefabInstance);\r\n    }\r\n    countPoint(point: number){\r\n        this.destroyCount += point;\r\n        this.countPointLb.string = `${this.destroyCount}`;\r\n        this.overPointLb.string = `${this.destroyCount}`;\r\n    }\r\n    savePoint() {\r\n        this.overPointLb.string = `${this.destroyCount}`;\r\n\r\n        let storedHighPoint = parseInt(sys.localStorage.getItem('highPoint'));\r\n        if (!isNaN(storedHighPoint)) {\r\n            this.highPoint = storedHighPoint;\r\n        }\r\n\r\n        if (this.destroyCount > this.highPoint) {\r\n            this.highPoint = this.destroyCount;\r\n            sys.localStorage.setItem('highPoint', this.highPoint.toString());\r\n        }\r\n\r\n        this.highPointLb.string = `${this.highPoint}`;\r\n    }\r\n}\r\n\r\n\r\n"]}