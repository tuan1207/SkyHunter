{"version":3,"sources":["file:///D:/Cocos%20Creator/Sky-Hunter/NewProject/assets/scripts/Boss.ts"],"names":["_decorator","Component","Collider2D","Contact2DType","math","Vec3","Prefab","Animation","Vec2","AudioToggle","ButtonPlayScene","ccclass","property","Boss","bulletCont","maxHealth","currentHealth","randomX","randomY","randomPosition","ZERO","bulletVelos","start","collider","getComponent","on","BEGIN_CONTACT","onBeginContact","END_CONTACT","onEndContact","randomPos","onLoad","instance","update","dt","moveEnable","direction","clone","subtract","node","position","normalize","distance","posX","x","posY","y","setPosition","random","selfCollider","otherCollider","contact","onAudioQueue","name","scheduleOnce","destroy"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Collider2D, Contact2DType, math, Vec3, tween, IPhysics2DContact, Prefab, instantiate, macro, Animation, Scene, RigidBody2D, Vec2 } from 'cc';\r\nimport { GameCtrl } from './GameCtrl';\r\nimport { Plane } from './Plane';\r\nimport { AudioToggle } from './AudioToggle';\r\nimport { ButtonPlayScene } from './ButtonPlayScene';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Boss')\r\nexport class Boss extends Component {\r\n    static instance: Boss;\r\n    @property(Prefab)\r\n    public bulletE: Prefab = null;\r\n    @property(Animation)\r\n    public laserBullet: Animation = null;\r\n    @property\r\n    speed: number = 100;\r\n\r\n    public bulletCont = [];\r\n    public maxHealth: number = 150;\r\n    public currentHealth: number = 150;  \r\n    \r\n    public randomX: number;\r\n    public randomY: number;\r\n    public randomPosition: Vec3 = Vec3.ZERO;\r\n    bulletVelos = [\r\n        new Vec2(0, 13.85), new Vec2(5.3, 12.8), new Vec2(10.6, 10.6), new Vec2(12.8, 5.3),\r\n        new Vec2(13.85, 0), new Vec2(12.8, -5.3), new Vec2(10.6, -10.6), new Vec2(5.3, -12.8),\r\n        new Vec2(0, -13.85), new Vec2(-5.3, -12.8), new Vec2(-10.6, -10.6), new Vec2(-12.8, -5.3),\r\n        new Vec2(-13.85, 0), new Vec2(-12.8, 5.3), new Vec2(-10.6, 10.6), new Vec2(-5.3, 12.8),\r\n    ];\r\n    start() {\r\n        let collider = this.getComponent(Collider2D);\r\n        if (collider) {\r\n            collider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n            collider.on(Contact2DType.END_CONTACT, this.onEndContact, this);\r\n        }\r\n        this.randomPos();\r\n    }\r\n    protected onLoad(): void {\r\n        Boss.instance = this;\r\n    }\r\n    update(dt: number) {\r\n        if (!ButtonPlayScene.instance.moveEnable) {\r\n            return;\r\n        }\r\n        let direction = this.randomPosition.clone().subtract(this.node.position).normalize();\r\n        let distance = math.Vec3.distance(this.node.position, this.randomPosition);\r\n        let posX = this.node.position.x + direction.x * distance * 0.01;\r\n        let posY = this.node.position.y + direction.y * distance * 0.01;\r\n        this.node.setPosition(new Vec3(posX, posY));\r\n        if (distance <= 50) {\r\n            this.randomPos();  \r\n        }\r\n    }\r\n    randomPos(){\r\n        this.randomX = math.random() * (0 - 1000) + 500;\r\n        this.randomY = math.random() * (200 - 600) + 400;\r\n        this.randomPosition = new Vec3(this.randomX, this.randomY);        \r\n    }\r\n    onBeginContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null){\r\n        AudioToggle.instance.onAudioQueue(7);\r\n        if(otherCollider.node.name === 'bullet0' || otherCollider.node.name === 'rocket'){\r\n            this.scheduleOnce(() => {otherCollider.node?.destroy()}); \r\n        }\r\n    }\r\n    onEndContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null){\r\n\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n\r\n"]}