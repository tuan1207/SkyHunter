{"version":3,"sources":["file:///D:/Cocos%20Creator/Sky-Hunter/NewProject/assets/scripts/Helicopter.ts"],"names":["_decorator","Component","Vec3","Collider2D","Contact2DType","ccclass","property","Helicopter","bulletSpeed","posX","posY","spawnItemPos","start","collider","getComponent","on","BEGIN_CONTACT","onBeginContact","END_CONTACT","onEndContact","onLoad","instance","update","deltaTime","node","position","x","y","destroy","posBullet","setPosition","scheduleOnce","console","log","selfCollider","otherCollider","contact","other","self"],"mappings":";;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,U,OAAAA,U;AAAYC,MAAAA,a,OAAAA,a;;;;;;;;;OAGlD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;4BAGjBO,U,WADZF,OAAO,CAAC,YAAD,C,2BAAR,MACaE,UADb,SACgCN,SADhC,CAC0C;AAAA;AAAA;AAAA,eAE/BO,WAF+B,GAET,EAFS;AAAA,eAG9BC,IAH8B;AAAA,eAI9BC,IAJ8B;AAAA,eAK/BC,YAL+B;AAAA;;AAMtCC,QAAAA,KAAK,GAAG;AACJ,cAAIC,QAAQ,GAAG,KAAKC,YAAL,CAAkBX,UAAlB,CAAf;;AACA,cAAGU,QAAH,EAAY;AACRA,YAAAA,QAAQ,CAACE,EAAT,CAAYX,aAAa,CAACY,aAA1B,EAAyC,KAAKC,cAA9C,EAA8D,IAA9D;AACAJ,YAAAA,QAAQ,CAACE,EAAT,CAAYX,aAAa,CAACc,WAA1B,EAAuC,KAAKC,YAA5C,EAA0D,IAA1D;AACH;AACJ;;AACSC,QAAAA,MAAM,GAAS;AACrBb,UAAAA,UAAU,CAACc,QAAX,GAAsB,IAAtB;AACH;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB;AACtB,eAAKd,IAAL,GAAY,KAAKe,IAAL,CAAUC,QAAV,CAAmBC,CAA/B;AACA,eAAKhB,IAAL,GAAY,KAAKc,IAAL,CAAUC,QAAV,CAAmBE,CAA/B;AAEA,eAAKlB,IAAL,IAAa,KAAKD,WAAL,GAAmB,GAAhC;;AACA,cAAG,KAAKC,IAAL,GAAY,GAAf,EAAmB;AACf,iBAAKe,IAAL,CAAUI,OAAV;AACH;;AACD,cAAIC,SAAS,GAAG,IAAI3B,IAAJ,CAAS,KAAKO,IAAd,EAAoB,KAAKC,IAAzB,CAAhB;AACA,eAAKc,IAAL,CAAUM,WAAV,CAAsBD,SAAtB;AACA,eAAKE,YAAL,CAAkB,MAAM;AAACC,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAKtB,YAAjB;AAA+B,WAAxD;AACH;;AACDM,QAAAA,cAAc,CAACiB,YAAD,EAA2BC,aAA3B,EAAsDC,OAAtD,EAAwF;AAClG,cAAIC,KAAK,GAAGF,aAAa,CAACX,IAA1B;AACA,cAAIc,IAAI,GAAGJ,YAAY,CAACV,IAAxB;AACA,eAAKb,YAAL,GAAoBuB,YAAY,CAACV,IAAb,CAAkBC,QAAtC;AAEA,eAAKM,YAAL,CAAkB,MAAK;AAACG,YAAAA,YAAY,CAACV,IAAb,CAAkBI,OAAlB;AAA4B,WAApD,EALkG,CAMlG;AACH;;AACDT,QAAAA,YAAY,CAACe,YAAD,EAA2BC,aAA3B,EAAsDC,OAAtD,EAAwF,CAEnG;;AAvCqC,O,UAC/Bf,Q","sourcesContent":["import { _decorator, Component, Node, Vec3, Collider2D, Contact2DType, IPhysics2DContact, Prefab, instantiate } from 'cc';\r\nimport { Plane } from './Plane';\r\nimport { GameCtrl } from './GameCtrl';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Helicopter')\r\nexport class Helicopter extends Component {\r\n    static instance: Helicopter;\r\n    public bulletSpeed: number = 10;\r\n    private posX: number;\r\n    private posY: number;\r\n    public spawnItemPos;\r\n    start() {\r\n        let collider = this.getComponent(Collider2D);\r\n        if(collider){\r\n            collider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n            collider.on(Contact2DType.END_CONTACT, this.onEndContact, this);\r\n        }\r\n    }\r\n    protected onLoad(): void {\r\n        Helicopter.instance = this;\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        this.posX = this.node.position.x;\r\n        this.posY = this.node.position.y;\r\n\r\n        this.posX += this.bulletSpeed * 0.5;\r\n        if(this.posX > 690){\r\n            this.node.destroy();\r\n        }\r\n        let posBullet = new Vec3(this.posX, this.posY);\r\n        this.node.setPosition(posBullet);\r\n        this.scheduleOnce(() => {console.log(this.spawnItemPos)});\r\n    }\r\n    onBeginContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null){\r\n        let other = otherCollider.node;\r\n        let self = selfCollider.node;\r\n        this.spawnItemPos = selfCollider.node.position;\r\n        \r\n        this.scheduleOnce(() =>{selfCollider.node.destroy()} );\r\n        // this.scheduleOnce(() =>{GameCtrl.instance.spawnItem()} );\r\n    }\r\n    onEndContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null){\r\n\r\n    }\r\n\r\n    \r\n}\r\n\r\n\r\n"]}