{"version":3,"sources":["file:///D:/Cocos%20Creator/Sky-Hunter/NewProject/assets/scripts/JoyStick.ts"],"names":["_decorator","Component","misc","Node","UITransform","Vec3","ccclass","property","JoyStick","Pos","VecY","angleDeg","moveSpeed","start","update","deltaTime","console","log","onLoad","instance","Stick","setPosition","node","on","EventType","TOUCH_MOVE","onStickMove","TOUCH_END","onStickEnd","TOUCH_CANCEL","event","wp","getUILocation","getComponent","convertToNodeSpaceAR","x","y","stickMag","length","maxR","countAngleStick","dt","angle","detail","distance","radian","degreesToRadians","deltaX","Math","cos","deltaY","sin","posX","plane","position","posY"],"mappings":"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","sourcesContent":["import { _decorator, Component, EventTouch, math, misc, Node, UITransform, Vec3 } from 'cc';\r\nimport { Plane } from './Plane';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('JoyStick')\r\nexport class JoyStick extends Component {\r\n    static instance: JoyStick;\r\n    @property(Node)\r\n    public Stick: Node = null;\r\n    @property\r\n    public maxR: number = 100;\r\n    public Pos;\r\n    public VecY = new Vec3(1, 0, 0);\r\n    public angleDeg;\r\n    @property(Node)\r\n    public plane: Node = null;\r\n    public moveSpeed: number = 200;\r\n    \r\n    start() {\r\n\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        console.log(this.Pos);\r\n    }\r\n    protected onLoad(): void {\r\n        JoyStick.instance = this;\r\n        this.Stick.setPosition(new Vec3(0, 0));\r\n        this.node.on(Node.EventType.TOUCH_MOVE, this.onStickMove, this);\r\n        this.node.on(Node.EventType.TOUCH_END, this.onStickEnd, this);\r\n        this.node.on(Node.EventType.TOUCH_CANCEL, this.onStickEnd, this);\r\n    }\r\n    onStickMove(event: EventTouch){\r\n        let wp = event.getUILocation();\r\n        this.Pos = this.node.getComponent(UITransform).convertToNodeSpaceAR(new Vec3(wp.x, wp.y));\r\n        let stickMag = this.Pos.length();\r\n        if(stickMag <= 0){\r\n            return;\r\n        }\r\n        if(stickMag > this.maxR){\r\n            this.Pos.x = this.Pos.x * this.maxR/stickMag;\r\n            this.Pos.y = this.Pos.y * this.maxR/stickMag;\r\n        }\r\n        this.Stick.setPosition(this.Pos);\r\n    }\r\n    onStickEnd(event: EventTouch){\r\n        this.Stick.setPosition(new Vec3(0, 0));\r\n    }\r\n    countAngleStick(event, dt: number){\r\n        let angle = event.detail.angle; // Góc quay của joystick\r\n        let distance = event.detail.distance; // Khoảng cách từ tâm của joystick đến điểm đang chạm\r\n        \r\n        // Tính toán vector di chuyển dựa trên góc và khoảng cách\r\n        let radian = misc.degreesToRadians(angle); // Chuyển đổi góc sang radian\r\n        let deltaX = Math.cos(radian) * distance; // Tính toán delta X\r\n        let deltaY = Math.sin(radian) * distance; // Tính toán delta Y\r\n        \r\n        // Di chuyển đối tượng\r\n        let posX = this.plane.position.x;\r\n        let posY = this.plane.position.y;\r\n\r\n        posX += deltaX * this.moveSpeed * dt;\r\n        posY += deltaY * this.moveSpeed * dt;\r\n    }\r\n    \r\n}\r\n\r\n\r\n"]}