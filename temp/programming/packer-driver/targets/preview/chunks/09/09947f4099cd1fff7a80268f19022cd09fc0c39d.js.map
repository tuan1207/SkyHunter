{"version":3,"sources":["file:///D:/Cocos%20Creator/Sky-Hunter/NewProject/assets/scripts/Item.ts"],"names":["_decorator","Component","Vec3","ccclass","property","Item","bulletSpeed","posX","posY","start","update","deltaTime","node","position","x","y","posBullet","setPosition"],"mappings":";;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,I,OAAAA,I;;;;;;;;;OAChC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;sBAGjBK,I,WADZF,OAAO,CAAC,MAAD,C,gBAAR,MACaE,IADb,SAC0BJ,SAD1B,CACoC;AAAA;AAAA;AAAA,eACzBK,WADyB,GACH,EADG;AAAA,eAExBC,IAFwB;AAAA,eAGxBC,IAHwB;AAAA;;AAIhCC,QAAAA,KAAK,GAAG,CACJ;AACA;AACA;AACA;AACA;AACH,SAV+B,CAYhC;AAEA;AACA;AAEA;;;AACAC,QAAAA,MAAM,CAACC,SAAD,EAAoB;AACtB,eAAKJ,IAAL,GAAY,KAAKK,IAAL,CAAUC,QAAV,CAAmBC,CAA/B;AACA,eAAKN,IAAL,GAAY,KAAKI,IAAL,CAAUC,QAAV,CAAmBE,CAA/B;;AACA,cAAG,KAAKR,IAAL,KAAc,CAAjB,EAAmB;AACf;AACH;;AACD,eAAKC,IAAL,IAAa,KAAKF,WAAL,GAAmB,GAAhC;AAEA,cAAIU,SAAS,GAAG,IAAId,IAAJ,CAAS,KAAKK,IAAd,EAAoB,KAAKC,IAAzB,CAAhB;AACA,eAAKI,IAAL,CAAUK,WAAV,CAAsBD,SAAtB;AACH;;AA5B+B,O","sourcesContent":["import { _decorator, Component, Node, Vec3, Collider2D, Contact2DType, IPhysics2DContact, PhysicsSystem } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Item')\r\nexport class Item extends Component {\r\n    public bulletSpeed: number = 10;\r\n    private posX: number;\r\n    private posY: number;\r\n    start() {\r\n        // let collider = this.getComponent(Collider2D);\r\n        // if(collider){\r\n        //     collider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n        //     collider.on(Contact2DType.END_CONTACT, this.onEndContact, this);\r\n        // }\r\n    }\r\n\r\n    // onBeginContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null){\r\n        \r\n    // }\r\n    // onEndContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null){\r\n\r\n    // }\r\n    update(deltaTime: number) {\r\n        this.posX = this.node.position.x;\r\n        this.posY = this.node.position.y;\r\n        if(this.posX === 0){\r\n            return;\r\n        }\r\n        this.posY -= this.bulletSpeed * 0.3;\r\n        \r\n        let posBullet = new Vec3(this.posX, this.posY);\r\n        this.node.setPosition(posBullet);\r\n    }\r\n}\r\n\r\n\r\n"]}