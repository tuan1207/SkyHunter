{"version":3,"sources":["file:///D:/Cocos%20Creator/Sky-Hunter/NewProject/assets/scripts/JoyStick.ts"],"names":["_decorator","Component","math","Node","UITransform","Vec3","ccclass","property","JoyStick","stickPos","VecY","start","update","dt","movePlane","onLoad","instance","node","on","EventType","TOUCH_MOVE","onStickMove","TOUCH_END","onStickEnd","TOUCH_CANCEL","event","wp","getUILocation","getComponent","convertToNodeSpaceAR","x","y","stickMag","length","maxR","Stick","setPosition","direction","clone","subtract","normalize","distance","posX","plane","position","posY"],"mappings":"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","sourcesContent":["import { _decorator, Component, EventTouch, math, misc, Node, UITransform, Vec3 } from 'cc';\r\nimport { Plane } from './Plane';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('JoyStick')\r\nexport class JoyStick extends Component {\r\n    static instance: JoyStick;\r\n\r\n    @property(Node)\r\n    public joyStick: Node = null;\r\n    @property(Node)\r\n    public Stick: Node = null;\r\n    @property\r\n    public maxR: number = 100;\r\n    @property(Node)\r\n    public plane: Node = null;\r\n\r\n    public stickPos;\r\n    public VecY = new Vec3(0, 0, 0);\r\n    start() {\r\n\r\n    }\r\n\r\n    update(dt: number) {\r\n        this.movePlane();\r\n    }\r\n    protected onLoad(): void {\r\n        JoyStick.instance = this;\r\n        \r\n        this.node.on(Node.EventType.TOUCH_MOVE, this.onStickMove, this);\r\n        this.node.on(Node.EventType.TOUCH_END, this.onStickEnd, this);\r\n        this.node.on(Node.EventType.TOUCH_CANCEL, this.onStickEnd, this);\r\n\r\n    }\r\n    onStickMove(event: EventTouch, dt: number){\r\n        let wp = event.getUILocation();\r\n        this.stickPos = this.node.getComponent(UITransform).convertToNodeSpaceAR(new Vec3(wp.x, wp.y));\r\n        let stickMag = this.stickPos.length();\r\n        if(stickMag <= 0){\r\n            return;\r\n        }\r\n        if(stickMag > this.maxR){\r\n            this.stickPos.x = this.stickPos.x * this.maxR/stickMag;\r\n            this.stickPos.y = this.stickPos.y * this.maxR/stickMag;\r\n        }\r\n        this.Stick.setPosition(this.stickPos);\r\n        // let direction = this.Pos.clone().subtract(this.VecY).normalize();\r\n        // let distance = math.Vec3.distance(this.VecY, this.Pos);\r\n        // let posX = this.plane.position.x + direction.x * distance * 0.05;\r\n        // let posY = this.plane.position.y + direction.y * distance * 0.05;\r\n        // if (posX >= -630 && posX <= 630 && posY >= -330 && posY <= 330){\r\n        //     this.plane.setPosition(new Vec3(posX, posY));\r\n        // }else{return;}\r\n    }\r\n    onStickEnd(event: EventTouch){\r\n        this.Stick.setPosition(new Vec3(0, 0));\r\n    }\r\n\r\n    movePlane(){\r\n        let direction = this.stickPos.clone().subtract(this.VecY).normalize();\r\n        let distance = math.Vec3.distance(this.VecY, this.stickPos);\r\n        let posX = this.plane.position.x + direction.x * distance * 0.05;\r\n        let posY = this.plane.position.y + direction.y * distance * 0.05;\r\n        if (posX >= -630 && posX <= 630 && posY >= -330 && posY <= 330){\r\n            this.plane.setPosition(new Vec3(posX, posY));\r\n        }else{return;}\r\n    }\r\n}\r\n\r\n\r\n"]}